{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Users/chetanpatel/Documents/github/chetanpate1.github.io/src/components/ui/logo.tsx"],"sourcesContent":["type Props = {\n   size?: number;\n   className?: string;\n};\n\nconst Logo = (props: Props) => {\n   const { size = 30 } = props;\n\n   return <img {...props} src=\"./logo.svg\" alt=\"Logo\" height={size} width={size} />;\n};\n\nexport { Logo };"],"names":[],"mappings":";;;;;AAKA,MAAM,OAAO,CAAC;IACX,MAAM,EAAE,OAAO,EAAE,EAAE,GAAG;IAEtB,qBAAO,8OAAC;QAAK,GAAG,KAAK;QAAE,KAAI;QAAa,KAAI;QAAO,QAAQ;QAAM,OAAO;;;;;;AAC3E"}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 81, "column": 0}, "map": {"version":3,"sources":["file:///Users/chetanpatel/Documents/github/chetanpate1.github.io/src/app/icon.tsx"],"sourcesContent":["import { Logo } from '@/components/ui/logo';\nimport { ImageResponse } from 'next/og';\n\n// Image metadata\nexport const size = {\n   width: 32,\n   height: 32\n};\n\nexport const contentType = 'image/png';\n\n// Image generation\nexport default function Icon() {\n   return new ImageResponse(\n      (\n         // ImageResponse JSX element\n         <Logo />\n      ),\n      // ImageResponse options\n      {\n         // For convenience, we can re-use the exported icons size metadata\n         // config to also set the ImageResponse's width and height.\n         ...size\n      }\n   )\n}"],"names":[],"mappings":";;;;;;AAAA;AACA;;;;AAGO,MAAM,OAAO;IACjB,OAAO;IACP,QAAQ;AACX;AAEO,MAAM,cAAc;AAGZ,SAAS;IACrB,OAAO,IAAI,0HAAA,CAAA,gBAAa,CAElB,4BAA4B;kBAC5B,8OAAC,gIAAA,CAAA,OAAI;;;;cAER,wBAAwB;IACxB;QACG,kEAAkE;QAClE,2DAA2D;QAC3D,GAAG,IAAI;IACV;AAEN"}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 116, "column": 0}, "map": {"version":3,"sources":["file:///Users/chetanpatel/Documents/github/chetanpate1.github.io/src/app/icon--route-entry.js"],"sourcesContent":["import { NextResponse } from 'next/server'\nimport * as _imageModule from \"./icon.tsx\"\n\nconst imageModule = { ..._imageModule }\n\nconst handler = imageModule.default\nconst generateImageMetadata = imageModule.generateImageMetadata\n\nif (typeof handler !== 'function') {\n    throw new Error('Default export is missing in \"./icon.tsx\"')\n}\n\nexport async function GET(_, ctx) {\n    const params = await ctx.params\n    const { __metadata_id__, ...rest } = params || {}\n    const restParams = params ? rest : undefined\n    const targetId = __metadata_id__\n    let id = undefined\n\n    if (generateImageMetadata) {\n        const imageMetadata = await generateImageMetadata({ params: restParams })\n        id = imageMetadata.find((item) => {\n            if (process.env.NODE_ENV !== 'production') {\n                if (item?.id == null) {\n                    throw new Error('id property is required for every item returned from generateImageMetadata')\n                }\n            }\n            return item.id.toString() === targetId\n        })?.id\n\n        if (id == null) {\n            return new NextResponse('Not Found', {\n                status: 404,\n            })\n        }\n    }\n\n    return handler({ params: restParams, id })\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,MAAM,cAAc;IAAE,GAAG,mHAAY;AAAC;AAEtC,MAAM,UAAU,YAAY,OAAO;AACnC,MAAM,wBAAwB,YAAY,qBAAqB;AAE/D,IAAI,OAAO,YAAY,YAAY;IAC/B,MAAM,IAAI,MAAM;AACpB;AAEO,eAAe,IAAI,CAAC,EAAE,GAAG;IAC5B,MAAM,SAAS,MAAM,IAAI,MAAM;IAC/B,MAAM,EAAE,eAAe,EAAE,GAAG,MAAM,GAAG,UAAU,CAAC;IAChD,MAAM,aAAa,SAAS,OAAO;IACnC,MAAM,WAAW;IACjB,IAAI,KAAK;IAET,IAAI,uBAAuB;QACvB,MAAM,gBAAgB,MAAM,sBAAsB;YAAE,QAAQ;QAAW;QACvE,KAAK,cAAc,IAAI,CAAC,CAAC;YACrB,wCAA2C;gBACvC,IAAI,MAAM,MAAM,MAAM;oBAClB,MAAM,IAAI,MAAM;gBACpB;YACJ;YACA,OAAO,KAAK,EAAE,CAAC,QAAQ,OAAO;QAClC,IAAI;QAEJ,IAAI,MAAM,MAAM;YACZ,OAAO,IAAI,8HAAA,CAAA,eAAY,CAAC,aAAa;gBACjC,QAAQ;YACZ;QACJ;IACJ;IAEA,OAAO,QAAQ;QAAE,QAAQ;QAAY;IAAG;AAC5C"}},
    {"offset": {"line": 160, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}