{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/chetanpatel/Documents/github/chetanpate1.github.io/src/components/ui/logo.tsx"],"sourcesContent":["import Image from 'next/image';\n\ntype Props = {\n   size?: number;\n   className?: string;\n};\n\nconst Logo = (props: Props) => {\n   const { size = 30 } = props;\n\n   return <Image {...props} src=\"./logo.svg\" alt=\"Logo\" height={size} width={size} />;\n};\n\nexport { Logo };"],"names":[],"mappings":";;;;AAAA;;;AAOA,MAAM,OAAO,CAAC;IACX,MAAM,EAAE,OAAO,EAAE,EAAE,GAAG;IAEtB,qBAAO,8OAAC,6HAAA,CAAA,UAAK;QAAE,GAAG,KAAK;QAAE,KAAI;QAAa,KAAI;QAAO,QAAQ;QAAM,OAAO;;;;;;AAC7E"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":["file:///Users/chetanpatel/Documents/github/chetanpate1.github.io/src/app/icon.tsx"],"sourcesContent":["import { Logo } from '@/components/ui/logo';\nimport { ImageResponse } from 'next/og';\n\n// Image metadata\nexport const size = {\n   width: 32,\n   height: 32\n};\n\nexport const contentType = 'image/png';\n\n// Image generation\nexport default function Icon() {\n   return new ImageResponse(\n      (\n         // ImageResponse JSX element\n         <Logo />\n      ),\n      // ImageResponse options\n      {\n         // For convenience, we can re-use the exported icons size metadata\n         // config to also set the ImageResponse's width and height.\n         ...size\n      }\n   )\n}"],"names":[],"mappings":";;;;;;AAAA;AACA;;;;AAGO,MAAM,OAAO;IACjB,OAAO;IACP,QAAQ;AACX;AAEO,MAAM,cAAc;AAGZ,SAAS;IACrB,OAAO,IAAI,0HAAA,CAAA,gBAAa,CAElB,4BAA4B;kBAC5B,8OAAC,gIAAA,CAAA,OAAI;;;;cAER,wBAAwB;IACxB;QACG,kEAAkE;QAClE,2DAA2D;QAC3D,GAAG,IAAI;IACV;AAEN"}},
    {"offset": {"line": 64, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":["file:///Users/chetanpatel/Documents/github/chetanpate1.github.io/src/app/icon--metadata.js"],"sourcesContent":["import { contentType, size } from \"./icon.tsx\"\nimport { fillMetadataSegment } from 'next/dist/lib/metadata/get-metadata-route'\n\nconst imageModule = { contentType, size }\n\nexport default async function (props) {\n    const { __metadata_id__: _, ...params } = await props.params\n    const imageUrl = fillMetadataSegment(\"/\", params, \"icon\")\n\n    const { generateImageMetadata } = imageModule\n\n    function getImageMetadata(imageMetadata, idParam) {\n        const data = {\n            alt: imageMetadata.alt,\n            type: imageMetadata.contentType || 'image/png',\n            url: imageUrl + (idParam ? ('/' + idParam) : '') + \"?1af7f710e93e6dd4\",\n        }\n        const { size } = imageMetadata\n        if (size) {\n            data.sizes = size.width + \"x\" + size.height;\n        }\n        return data\n    }\n\n    if (generateImageMetadata) {\n        const imageMetadataArray = await generateImageMetadata({ params })\n        return imageMetadataArray.map((imageMetadata, index) => {\n            const idParam = (imageMetadata.id || index) + ''\n            return getImageMetadata(imageMetadata, idParam)\n        })\n    } else {\n        return [getImageMetadata(imageModule, '')]\n    }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,MAAM,cAAc;IAAE,aAAA,mHAAA,CAAA,cAAW;IAAE,MAAA,mHAAA,CAAA,OAAI;AAAC;AAEzB,8CAAgB,KAAK;IAChC,MAAM,EAAE,iBAAiB,CAAC,EAAE,GAAG,QAAQ,GAAG,MAAM,MAAM,MAAM;IAC5D,MAAM,WAAW,CAAA,GAAA,2KAAA,CAAA,sBAAmB,AAAD,EAAE,KAAK,QAAQ;IAElD,MAAM,EAAE,qBAAqB,EAAE,GAAG;IAElC,SAAS,iBAAiB,aAAa,EAAE,OAAO;QAC5C,MAAM,OAAO;YACT,KAAK,cAAc,GAAG;YACtB,MAAM,cAAc,WAAW,IAAI;YACnC,KAAK,WAAW,CAAC,UAAW,MAAM,UAAW,EAAE,IAAI;QACvD;QACA,MAAM,EAAE,IAAI,EAAE,GAAG;QACjB,IAAI,MAAM;YACN,KAAK,KAAK,GAAG,KAAK,KAAK,GAAG,MAAM,KAAK,MAAM;QAC/C;QACA,OAAO;IACX;IAEA,IAAI,uBAAuB;QACvB,MAAM,qBAAqB,MAAM,sBAAsB;YAAE;QAAO;QAChE,OAAO,mBAAmB,GAAG,CAAC,CAAC,eAAe;YAC1C,MAAM,UAAU,CAAC,cAAc,EAAE,IAAI,KAAK,IAAI;YAC9C,OAAO,iBAAiB,eAAe;QAC3C;IACJ,OAAO;QACH,OAAO;YAAC,iBAAiB,aAAa;SAAI;IAC9C;AACJ"}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}